# Redirección de HTTP a HTTPS
server {
    listen 80;
    server_name app-test.nomadepeople.com;

    # Acepta MEWS y navegadores reales
    if ($host !~* ^(app-test\.nomadepeople\.com|141\.76\.94\.18)$ ) {
        return 444;
    }

    return 301 https://$host$request_uri;
}



# Bloque HTTPS
server {
    listen 443 ssl http2;
    server_name app-test.nomadepeople.com;

    # Tamaño del cuerpo permitido
    client_max_body_size 30M;

    ssl_certificate /etc/letsencrypt/live/app-test.nomadepeople.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/app-test.nomadepeople.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Headers de seguridad
    add_header X-Frame-Options "DENY";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; frame-ancestors 'none';";

    # Protección contra rutas de bots y escaneos comunes
    location ~* /(wp-login|wp-admin|\.git|\.env|phpmyadmin|actuator|ecp|owa|\.DS_Store|\.well-known|\.htaccess) {
        return 444;
    }

    # Bloqueo por User-Agent malicioso
    if ($http_user_agent ~* (zgrab|masscan|sqlmap|acunetix|dirbuster|nikto|fuzzer)) {
        return 444;
    }


    location /service/ {
        limit_req zone=mews_limit burst=10 nodelay;

        proxy_pass http://app_nomade:8000/;
        rewrite ^/service(/.*)$ $1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /static/ {
        alias /staticfiles/;
    }

    location /metabase/ {
        proxy_pass http://metabase-metabase-1:3000/;
        rewrite ^/metabase(/.*)$ $1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Logging detallado
    log_format full '$remote_addr - $host [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /dev/stdout full;
    error_log /dev/stderr warn;

    
}

